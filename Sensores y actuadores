# Sensores

## Sensor de presencia: HC-SR501
Sensor PIR Detección de movimiento de cuerpo infrarrojo piroeléctrico Bobury.

El sensor PIR detecta el movimiento midiendo los cambios en los niveles de infrarrojos (calor)
que emiten los objetos que lo rodean. Cuando se detecta el movimiento del sensor PIR, 
emite una señal de alto en su pin de salida. Rango de detección de 7 metros y ángulo operativo de 120º.

//Ejecución del programa una única vez al detectar movimiento

const int LEDPin = 13;        // pin para el LED
const int PIRPin = 2;         // pin de entrada (for PIR sensor)
 
int pirState = LOW;           // de inicio no hay movimiento
int val = 0;                  // estado del pin
 
void setup() 
{
   pinMode(LEDPin, OUTPUT); 
   pinMode(PIRPin, INPUT);
   Serial.begin(9600);
}
 
void loop()
{
   val = digitalRead(PIRPin);
   if (val == HIGH)   //si está activado
   { 
      digitalWrite(LEDPin, HIGH);  //LED ON
      if (pirState == LOW)  //si previamente estaba apagado
      {
        Serial.println("Sensor activado");
        pirState = HIGH;
      }
   } 
   else   //si esta desactivado
   {
      digitalWrite(LEDPin, LOW); // LED OFF
      if (pirState == HIGH)  //si previamente estaba encendido
      {
        Serial.println("Sensor parado");
        pirState = LOW;
      }
   }
}

## Sensor Luminoso: TCRT5000 A/D

Módulo Sensor Siguelíneas IR infrarrojos TCRT5000 A/D con doble salida analógica y digital.
Este módulo utiliza el sensor IR TCRT5000 y proporciona una salida digital con nivel de deteción
regulado por potenciómetro y una salida analógica directa que te permitirá detectar el nivel de intensidad
de la luz reflejada por una superficie. Utiliza un par de estos módulos para seguir líneas o detectar el borde 
de un tablero o una pared mediante su sensor infrarrojo TCRT5000
Alimentación: 3.3 – 5V



const int LEDPin = 13;
const int LDRPin = A0;
const int threshold = 100;
 
void setup() {
   pinMode(LEDPin, OUTPUT);
   pinMode(LDRPin, INPUT);
}
 
void loop() {
   int input = analogRead(LDRPin);
   if (input > threshold) {
      digitalWrite(LEDPin, HIGH);
   }
   else {
      digitalWrite(LEDPin, LOW);
   }
}

# Actuador

## Servomotor: Micro servo SG90


// Incluímos la librería para poder controlar el servo
#include <Servo.h>
 
// Declaramos la variable para controlar el servo
Servo servoMotor;
 
void setup() {
  // Iniciamos el monitor serie para mostrar el resultado
  Serial.begin(9600);
 
  // Iniciamos el servo para que empiece a trabajar con el pin 9
  servoMotor.attach(9);
}
 
void loop() {
  
  // Desplazamos a la posición 0º
  servoMotor.write(0);
  // Esperamos 1 segundo
  delay(1000);
  
  // Desplazamos a la posición 90º
  servoMotor.write(90);
  // Esperamos 1 segundo
  delay(1000);
  
  // Desplazamos a la posición 180º
  servoMotor.write(180);
  // Esperamos 1 segundo
  delay(1000);
}
